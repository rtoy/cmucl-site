# Defines four stages for our CI.  Each stage is run separately as a
# different job.  The artifacts option keeps all the generated items
# so they can be deployed. (I think).
stages:
 - init
 - build-site
 - build-docs
 - deploy

cache:
  key: texinfo
  paths:
    - texinfo
    - bin
    - share
    - gen

# Just creates the public directory where we're keeping all of the
# generated docs.
setup:
  stage: init
  tags:
    - site-gen
  artifacts:
     paths:
       - public
  script:
    - mkdir public

# Generates the webpages for the site.
site:
  stage: build-site
  tags:
    - site-gen
  artifacts:
     paths:
       - public
       - gen
  # Always build the site, even if nothing has changed.  Maybe we
  # don't really want to do this
  # and only build the site if something changed?
  script:
    # Just need to copy all of the html files to the gen directory
    - (cd cmucl-www/www; tar cf - .) | (cd gen; tar xf -)
    - ls -F gen

# Generates the texi docs.  Only done if some texi file changed so we don't
# have to download and build texinfo if nothing changed. 
docs:
  stage: build-docs
  tags:
    - site-gen
  artifacts:
     paths:
       - public
       - gen
  only:
    changes:
      - docs/cmu-user/*.texi
      - docs/interface/*.texi
      - docs/internals/*.texi
  script:
    # Get dev version of texinfo
    - ./build-texinfo.sh
    - PATH=$PWD/bin:$PATH
    - export TEXINPUTS=$PWD/docs:$TEXINPUTS
    - ls bin
    - type -all makeinfo; makeinfo --version
    - type -all texindex; texindex --version
    # Generate the design doc.
    - (cd docs/internals; make all)
    # Generate the user manual.  Include info, pdf, and html versions.
    - (cd docs/cmu-user; make all)
    # Generate the hemlock manuals.
    - (cd docs/interface; make all)
    # Copy everything to the appropriate subdirectories
    - (cd docs/internals; make install)
    - (cd docs/cmu-user; make install)
    - (cd docs/interface; make install)

# Deploys the things we created in public/ and copies that to the website.
pages:
  stage: deploy
  script:
    - cp -r gen/* public
  artifacts:
     paths:
       - public
  tags:
    - site-gen
  # Only deploy on master branch
  only:
    refs:
      - master